controlplane $ launch.sh
Waiting for Kubernetes to start...
Kubernetes started

controlplane $ kubectl cluster-info
Kubernetes master is running at https://172.17.0.30:6443
KubeDNS is running at https://172.17.0.30:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy

To further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.

controlplane $ kubectl get nodes
NAME           STATUS   ROLES    AGE    VERSION
controlplane   Ready    master   158m   v1.14.0
node01         Ready    <none>   158m   v1.14.0

controlplane $ kubectl get rc
No resources found.

controlplane $ kubectl get pods
No resources found.

controlplane $ kubectl create -f redis-master-service.yaml
service/redis-master created

controlplane $ kubectl get services
NAME           TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE
kubernetes     ClusterIP   10.96.0.1        <none>        443/TCP    158m
redis-master   ClusterIP   10.102.121.115   <none>        6379/TCP   1s

controlplane $ kubectl describe services redis-master
Name:              redis-master
Namespace:         default
Labels:            name=redis-master
Annotations:       <none>
Selector:          name=redis-master
Type:              ClusterIP
IP:                10.102.121.115
Port:              <unset>  6379/TCP
TargetPort:        6379/TCP
Endpoints:         <none>
Session Affinity:  None
Events:            <none>

controlplane $ kubectl create -f redis-slave-controller.yaml
replicationcontroller/redis-slave created

controlplane $ kubectl get rc
NAME          DESIRED   CURRENT   READY   AGE
redis-slave   2         2         0       1s

controlplane $ kubectl create -f redis-slave-service.yaml
service/redis-slave created

controlplane $ kubectl get services
NAME           TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE
kubernetes     ClusterIP   10.96.0.1        <none>        443/TCP    158m
redis-master   ClusterIP   10.102.121.115   <none>        6379/TCP   9s
redis-slave    ClusterIP   10.98.174.7      <none>        6379/TCP   0s

controlplane $ kubectl create -f frontend-controller.yaml
replicationcontroller/frontend created

controlplane $ kubectl get rc
NAME          DESIRED   CURRENT   READY   AGE
frontend      3         3         0       1s
redis-slave   2         2         2       9s

controlplane $ kubectl get pods
NAME                READY   STATUS              RESTARTS   AGE
frontend-hr5rh      0/1     ContainerCreating   0          1s
frontend-m5ttk      0/1     ContainerCreating   0          1s
frontend-pmtz9      0/1     ContainerCreating   0          1s
redis-slave-9m6t9   1/1     Running             0          9s
redis-slave-k5trh   1/1     Running             0          9s

controlplane $ kubectl create -f frontend-service.yaml
service/frontend created

controlplane $ kubectl get services
NAME           TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)        AGE
frontend       NodePort    10.99.231.249    <none>        80:30080/TCP   1s
kubernetes     ClusterIP   10.96.0.1        <none>        443/TCP        179m
redis-master   ClusterIP   10.102.121.115   <none>        6379/TCP       20m
redis-slave    ClusterIP   10.98.174.7      <none>        6379/TCP       20m

controlplane $ kubectl get pods
NAME                READY   STATUS    RESTARTS   AGE
frontend-hr5rh      1/1     Running   0          27m
frontend-m5ttk      1/1     Running   0          27m
frontend-pmtz9      1/1     Running   0          27m
redis-slave-9m6t9   1/1     Running   0          27m
redis-slave-k5trh   1/1     Running   0          27m

controlplane $ kubectl describe service frontend | grep NodePort
Type:                     NodePort
NodePort:                 <unset>  30080/TCP
